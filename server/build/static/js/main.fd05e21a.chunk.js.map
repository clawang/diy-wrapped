{"version":3,"sources":["gradient2.jpg","spotify1.JPG","spotify2.JPG","spotify3.JPG","CanvasGraphic.js","Search.js","Entity.js","App.js","serviceWorker.js","index.js","gradient1.jpg","gradient3.jpg","gradient4.jpg","gradient5.png"],"names":["module","exports","CanvasGraphic","props","useState","palette","setAppState","shortenString","text","remove","index","indexOf","substring","length","concat","drawStoryCanvas","a","ratio","window","devicePixelRatio","console","log","cv","document","getElementById","width","height","ctx","getContext","scale","drawImage","gradient4","startingHeight","blue","purple","orange","fillStyle","fillRect","gradient3","data","artists","images","url","font","fillText","i","Object","keys","name","metrics","measureText","toRemove","Math","ceil","writeText","tracks","genre","g","topGenre","charAt","toUpperCase","slice","textAlign","footerHeight","drawArtistsCanvas","c","yellow","pink","gradient5","startX","drawSongsCanvas","darkOrange","gradient1","album","words","x","y","src","Promise","resolve","reject","image","Image","crossOrigin","onload","useEffect","done","Vibrant","from","getPalette","err","getColor","className","id","SearchTrackResult","onClick","evt","setEntityData","map","artist","reduce","acc","cur","SearchArtistResult","Search","query","setQuery","results","setResults","searched","setSearched","fetchData","spotifyApi","searchTracks","then","res","items","searchArtists","type","value","placeholder","onChange","target","preventDefault","track","setData","Entity","selected","setSelected","dispatch","initialState","Array","time","reducer","state","action","newTracks","newArtists","Error","App","setDone","useReducer","SpotifyWebApi","token","e","hashParams","r","q","location","hash","exec","decodeURIComponent","getHashParams","access_token","setAccessToken","renderSelections","content","push","key","allFilled","alert","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fd05e21a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gradient2.f4d46500.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spotify1.c7677681.JPG\";","module.exports = __webpack_public_path__ + \"static/media/spotify2.0814b338.JPG\";","module.exports = __webpack_public_path__ + \"static/media/spotify3.a63b63cb.JPG\";","import React, {useEffect, useState} from 'react';\nimport Vibrant from 'node-vibrant';\nimport gradient1 from './gradient1.jpg';\nimport gradient2 from './gradient2.jpg';\nimport gradient3 from './gradient3.jpg';\nimport gradient4 from './gradient4.jpg';\nimport gradient5 from './gradient5.png';\nimport spotify1 from './spotify1.JPG';\nimport spotify2 from './spotify2.JPG';\nimport spotify3 from './spotify3.JPG';\n\nfunction CanvasGraphic(props) {\n  const [appState, setAppState] = useState({\n    palette: {}\n  });\n\n  const shortenString = (text, remove) => {\n  \tlet index = text.indexOf('(');\n  \tif(index > 0) return text.substring(0, index);\n\t\treturn text.substring(0, text.length-remove).concat('..');\n\t}\n\n  const getColor = () => {\n  \tlet src = '';\n  \tif(props.data.tracks) {\n\t\t\tsrc = props.data.artists[0].images[0].url || '';\n\t\t}\n  \tVibrant.from(src).getPalette(function(err, palette) {\n  \t\tconsole.log(palette);\n\t\t\tif(palette) {\n\t\t\t\tsetAppState({palette: palette});\n\t\t\t\t//drawSquareCanvas(palette);\n\t\t\t\tdrawSongsCanvas();\n\t\t\t\tdrawStoryCanvas();\n\t\t\t\tdrawArtistsCanvas();\n\t\t\t}\n\t\t});\n  }\n\n  const drawStoryCanvas = async () => {\n  \tlet ratio = window.devicePixelRatio;\n  \tconsole.log(ratio);\n  \tconst w = 450;\n  \tconst h = 800;\n  \tconst cv = document.getElementById(\"story\");\n  \tcv.width = w * ratio;\n    cv.height = h * ratio;\n    // cv.style.width = w + \"px\";\n    // cv.style.height = h + \"px\";\n  \tconst ctx = cv.getContext(\"2d\");\n  \tctx.scale(ratio, ratio);\n\n  \t//ctx.fillStyle = 'rgb(0,0,0)';\n  \t//ctx.fillRect(0, 0, c.width, c.height);\n  \tawait drawImage(ctx, gradient4, 0, 0, cv.width, cv.height);\n  \tconst startingHeight = 120;\n\n  \tconst blue = 'rgb(0,0,0)';\n  \tconst purple = 'rgb(177,197,252)';\n  \tconst orange = 'rgb(247,210,201)';\n\n  \tctx.fillStyle = blue;\n  \tctx.fillRect(50, 75, 350, 650);\n  \tawait drawImage(ctx, gradient3, 75, startingHeight + 25, 300, 200);\n  \tawait drawImage(ctx, props.data.artists[0].images[1].url, 100, startingHeight, 250, 250);\n\n  \tctx.fillStyle = 'rgb(255,255,255)';\n  \tctx.font = \"16px 'Circular'\";\n  \tctx.fillText('TOP ARTISTS', 70, startingHeight + 300);\n  \tctx.font = \"14px 'Circular'\";\n  \tfor(let i = 0; i < 5; i++) {\n  \t\tif(props.data.artists[i] && Object.keys(props.data.artists[i]).length != 0) {\n  \t\t\tlet name = props.data.artists[i].name;\n  \t\t\tlet metrics = ctx.measureText(name);\n  \t\t\tlet width = metrics.width;\n  \t\t\tif(width > 200) {\n  \t\t\t\tlet ratio = width/name.length;\n  \t\t\t\tlet toRemove = Math.ceil((width-200)/ratio);\n  \t\t\t\tname = shortenString(name, toRemove+1);\n  \t\t\t}\n  \t\t\tctx.fillStyle = purple;\n  \t\t\twriteText(ctx, name, 85, startingHeight + 325 + i * 18);\n  \t\t\tctx.fillStyle = 'rgb(255,255,255)';\n  \t\t\twriteText(ctx, i+1, 70, startingHeight + 325 + i * 18);\n  \t\t}\n  \t}\n\n  \tctx.font = \"16px 'Circular'\";\n  \tctx.fillText('TOP SONGS', 230, startingHeight + 300);\n  \tctx.font = \"14px 'Circular'\";\n  \tfor(let i = 0; i < 5; i++) {\n  \t\tif(props.data.tracks[i]) {\n  \t\t\tlet name = props.data.tracks[i].name;\n  \t\t\tlet metrics = ctx.measureText(name);\n  \t\t\tlet width = metrics.width;\n  \t\t\tif(width > 100) {\n  \t\t\t\tlet ratio = width/name.length;\n  \t\t\t\tlet toRemove = Math.ceil((width-100)/ratio);\n  \t\t\t\tname = shortenString(name, toRemove+1);\n  \t\t\t}\n  \t\t\tctx.fillStyle = purple;\n  \t\t\twriteText(ctx, name, 245, startingHeight + 325 + i * 18);\n  \t\t\tctx.fillStyle = 'rgb(255,255,255)';\n  \t\t\twriteText(ctx, i+1, 230, startingHeight + 325 + i * 18);\n  \t\t}\n  \t}\n\n\t\tctx.fillStyle = 'rgb(255,255,255)';\n  \tctx.font = \"16px 'Circular'\";\n  \tctx.fillText('TOP GENRE', 70, startingHeight + 470);\n  \tctx.fillStyle = purple;\n  \tctx.font = \"32px 'Circular'\";\n  \tif(props.genre) {\n  \t\tlet g = props.genre;\n  \t\tlet topGenre = g.charAt(0).toUpperCase() + g.slice(1);\n  \t\twriteText(ctx, topGenre, 70, startingHeight + 510);\n  \t}\n\n  \tconst footerHeight = 50;\n  \tctx.fillStyle = orange;\n  \tctx.fillRect(50, 625 + footerHeight, 350, footerHeight);\n  \tctx.fillStyle = blue;\n  \tctx.font = \"18px 'Circular'\";\n  \tctx.textAlign = 'center';\n  \twriteText(ctx, 'bit.ly/quarantine-wrapped', 225, startingHeight + 550 + footerHeight/2 + 8);\n  }\n\n  const drawArtistsCanvas = async () => {\n  \tlet ratio = window.devicePixelRatio;\n  \tconst w = 450;\n  \tconst h = 800;\n  \tconst c = document.getElementById(\"artists\");\n  \tc.width = w * ratio;\n    c.height = h * ratio;\n  \tconst ctx = c.getContext(\"2d\");\n  \tctx.scale(ratio, ratio);\n\n  \tconst purple = 'rgb(229,187,241)';\n  \tconst yellow = 'rgb(239,210,10)';\n  \tconst pink = 'rgb(226,28,164)';\n\n  \tctx.fillStyle = 'rgb(255,255,255)';\n  \tctx.fillRect(0, 0, c.width, c.height);\n\n\t  await drawImage(ctx, gradient5, 0, 0, 450, 800);\n\n\t  ctx.fillStyle = pink;\n  \tctx.fillRect(50, 75, 350, 650);\n\n  \tctx.font = \"32px 'Circular'\";\n  \tctx.fillStyle = 'rgb(255,255,255)';\n  \tctx.textAlign = 'center';\n  \twriteText(ctx, 'My Top Artists', 225, 150);\n\n  \tconst startingHeight = 180;\n  \tconst startX = 85;\n  \tctx.textAlign = 'left';\n  \tfor(let i = 0; i < 5; i++) {\n  \t\tif(props.data.artists[i]) {\n  \t\t\tawait drawImage(ctx, props.data.artists[i].images[1].url, startX, startingHeight + i * 100, 90, 90);\n  \t\t\tctx.font = \"18px 'Circular'\";\n  \t\t\tctx.fillStyle = yellow;\n  \t\t\twriteText(ctx, \"#\"+(i+1), startX + 105, startingHeight + 35 + i*100);\n  \t\t\tctx.fillStyle = 'rgb(255,255,255)';\n  \t\t\tlet name = props.data.artists[i].name;\n  \t\t\tlet metrics = ctx.measureText(name);\n  \t\t\tlet width = metrics.width;\n  \t\t\t\n  \t\t\tconst maxWidth = 180;\n  \t\t\tif(width > maxWidth) {\n  \t\t\t\tlet ratio = width/name.length;\n  \t\t\t\tlet toRemove = Math.ceil((width-maxWidth)/ratio);\n  \t\t\t\tname = shortenString(name, toRemove+1);\n  \t\t\t}\n  \t\t\tctx.font = \"22px 'Circular'\";\n  \t\t\twriteText(ctx, name, startX + 105, startingHeight + 65 + i * 100);\n  \t\t}\n  \t}\n  }\n\n  const drawSongsCanvas = async () => {\n  \tlet ratio = window.devicePixelRatio;\n  \tconst w = 450;\n  \tconst h = 800;\n  \tconst c = document.getElementById(\"songs\");\n  \tc.width = w * ratio;\n    c.height = h * ratio;\n    // c.style.width = w + \"px\";\n    // c.style.height = h + \"px\";\n  \tconst ctx = c.getContext(\"2d\");\n  \tctx.scale(ratio, ratio);\n\n  \tconst orange = 'rgb(226,139,5)';\n  \tconst yellow = 'rgb(228,203,46)';\n  \tconst darkOrange = 'rgb(205,38,2)';\n  \tconst blue = 'rgb(0,196,230)';\n\n  \tctx.fillStyle = 'rgb(255,255,255)';\n  \tctx.fillRect(0, 0, c.width, c.height);\n\n\t  await drawImage(ctx, gradient1, 0, 0, 450, 800);\n\n\t  ctx.fillStyle = yellow;\n  \tctx.fillRect(50, 75, 350, 650);\n\n  \tctx.font = \"32px 'Circular'\";\n  \tctx.fillStyle = 'rgb(0,0,0)';\n  \tctx.textAlign = 'center';\n  \twriteText(ctx, 'My Top Songs', 225, 150);\n\n  \tconst startingHeight = 180;\n  \tconst startX = 85;\n  \tctx.textAlign = 'left';\n  \tfor(let i = 0; i < 5; i++) {\n  \t\tif(props.data.tracks[i]) {\n  \t\t\tawait drawImage(ctx, props.data.tracks[i].album.images[1].url, startX, startingHeight + i * 100, 90, 90);\n  \t\t\tctx.font = \"18px 'Circular'\";\n  \t\t\tctx.fillStyle = blue;\n  \t\t\twriteText(ctx, \"#\"+(i+1), startX + 105, startingHeight + 30 + i*100);\n  \t\t\tctx.fillStyle = 'rgb(0,0,0)';\n  \t\t\tlet name = props.data.tracks[i].name;\n  \t\t\tlet metrics = ctx.measureText(name);\n  \t\t\tlet width = metrics.width;\n  \t\t\t\n  \t\t\tconst maxWidth = 180;\n  \t\t\tif(width > maxWidth) {\n  \t\t\t\tlet ratio = width/name.length;\n  \t\t\t\tlet toRemove = Math.ceil((width-maxWidth)/ratio);\n  \t\t\t\tname = shortenString(name, toRemove+1);\n  \t\t\t}\n  \t\t\twriteText(ctx, name, startX + 105, startingHeight + 52 + i * 100);\n\n  \t\t\tctx.font = \"16px 'Circular'\";\n  \t\t\tctx.fillStyle = darkOrange;\n  \t\t\twriteText(ctx, props.data.tracks[i].artists[0].name, startX + 105, startingHeight + 75 + i * 100);\n  \t\t}\n  \t}\n  }\n\n  const drawSquareCanvas = (palette) => {\n  \tlet c = document.getElementById(\"downloadable\");\n  \tc.width = c.clientWidth * 2\n  \tc.height = c.clientHeight * 2\n  \tlet ctx = c.getContext(\"2d\");\n  \tif(window.innerWidth < 600) {\n  \t\tctx.scale(1.4, 1.4);\n  \t} else {\n  \t\tctx.scale(2, 2);\n  \t}\n\n  \tif(palette.DarkMuted) {\n  \t\tconst bgColor = palette.DarkMuted.getRgb();\n  \t\tctx.fillStyle = 'rgb(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ')';\n  \t} else {\n  \t\tctx.fillStyle = 'rgb(0,0,0)';\n  \t}\n  \tctx.fillRect(0, 0, c.width, c.height);\n\n  \tctx.fillStyle = 'rgb(255,255,255)';\n  \tctx.font = \"16px 'Circular Spotify'\";\n\n  \tif(palette.Vibrant) {\n  \t\tconst bgColor = palette.Vibrant.getRgb();\n  \t\tctx.fillStyle = 'rgb(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ')';\n  \t} else {\n  \t\tctx.fillStyle = 'rgb(226,28,164)';\n  \t}\n  \tctx.fillText('QUARANTINE WRAPPED', 270, 50);\n  \tctx.fillRect(30, 43, 230, 3);\n\n  \tconst image = new Image();\n  \timage.crossOrigin = 'Anonymous';\n  \tif(props.data.tracks) {\n  \t\timage.src = props.data.artists[0].images[0].url || '';\n  \t}\n\n  \timage.onload = () => {\n  \t\tif(image.naturalWidth < image.naturalHeight) {\n  \t\t\tconst diff = (image.naturalHeight - image.naturalWidth) / 2;\n  \t\t\tctx.drawImage(image, 0, diff, image.naturalWidth, image.naturalWidth, 290, 90, 140, 140);\n  \t\t\tctx.drawImage(image, 0, diff, image.naturalWidth, image.naturalWidth, 280, 105, 160, 160);\n  \t\t\tctx.drawImage(image, 0, diff, image.naturalWidth, image.naturalWidth, 265, 125, 190, 190);\n  \t\t\tctx.drawImage(image, 0, diff, image.naturalWidth, image.naturalWidth, 250, 150, 220, 220);\n  \t\t} else if(image.naturalWidth > image.naturalHeight) {\n  \t\t\tconst diff = (image.naturalWidth - image.naturalHeight) / 2;\n  \t\t\tctx.drawImage(image, diff, 0, image.naturalHeight, image.naturalHeight, 290, 90, 140, 140);\n  \t\t\tctx.drawImage(image, diff, 0, image.naturalHeight, image.naturalHeight, 280, 105, 160, 160);\n  \t\t\tctx.drawImage(image, diff, 0, image.naturalHeight, image.naturalHeight, 265, 125, 190, 190);\n  \t\t\tctx.drawImage(image, diff, 0, image.naturalHeight, image.naturalHeight, 250, 150, 220, 220);\n  \t\t} else {\n  \t\t\tctx.drawImage(image, 290, 90, 140, 140);\n  \t\t\tctx.drawImage(image, 280, 105, 160, 160);\n  \t\t\tctx.drawImage(image, 265, 125, 190, 190);\n  \t\t\tctx.drawImage(image, 250, 150, 220, 220);\n  \t\t}\n  \t};\n\n  \tif(palette.LightVibrant) {\n  \t\tconst bgColor = palette.LightVibrant.getRgb();\n  \t\tctx.fillStyle = 'rgb(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ')';\n  \t} else {\n  \t\tctx.fillStyle = 'rgb(209,255,106)';\n  \t}\n\n  \tctx.font = \"18px 'Circular Spotify'\";\n  \tctx.fillText('TOP ARTISTS', 30, 106);\n  \tctx.fillStyle = 'rgb(255,255,255)';\n  \tctx.font = \"20px 'Circular Spotify'\";\n\n  \tfor(let i = 0; i < 5; i++) {\n  \t\tif(props.data.artists[i] && Object.keys(props.data.artists[i]).length != 0) {\n  \t\t\tlet name = props.data.artists[i].name;\n  \t\t\tlet metrics = ctx.measureText(name);\n  \t\t\tlet width = metrics.width;\n  \t\t\tif(width > 200) {\n  \t\t\t\tlet ratio = width/name.length;\n  \t\t\t\tlet toRemove = Math.ceil((width-200)/ratio);\n  \t\t\t\tname = shortenString(name, toRemove+1);\n  \t\t\t}\n  \t\t\twriteText(ctx, name, 30, 133 + i * 28);\n  \t\t}\n  \t}\n\n  \tif(palette.LightVibrant) {\n  \t\tconst bgColor = palette.LightVibrant.getRgb();\n  \t\tctx.fillStyle = 'rgb(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ')';\n  \t} else {\n  \t\tctx.fillStyle = 'rgb(209,255,106)';\n  \t}\n\n  \tctx.font = \"18px 'Circular Spotify'\";\n  \twriteText(ctx, 'TOP SONGS', 30, 320);\n  \tctx.fillStyle = 'rgb(255,255,255)';\n  \tctx.font = \"20px 'Circular Spotify'\";\n\n  \tfor(let i = 0; i < 5; i++) {\n  \t\tif(props.data.tracks[i]) {\n  \t\t\tlet name = props.data.tracks[i].name;\n  \t\t\tlet metrics = ctx.measureText(name);\n  \t\t\tlet width = metrics.width;\n  \t\t\tif(width > 200) {\n  \t\t\t\tlet ratio = width/name.length;\n  \t\t\t\tlet toRemove = Math.ceil((width-200)/ratio);\n  \t\t\t\tname = shortenString(name, toRemove+1);\n  \t\t\t}\n  \t\t\twriteText(ctx, name, 30, 348 + i * 28);\n  \t\t}\n  \t}\n\n  \tif(palette.LightVibrant) {\n  \t\tconst bgColor = palette.LightVibrant.getRgb();\n  \t\tctx.fillStyle = 'rgb(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ')';\n  \t} else {\n  \t\tctx.fillStyle = 'rgb(209,255,106)';\n  \t}\n  \tctx.font = \"18px 'Circular Spotify'\";\n  \twriteText(ctx, 'TOP GENRE', 250, 430);\n  \tctx.fillStyle = 'rgb(255,255,255)';\n  \tctx.font = \"24px 'Circular Spotify'\";\n  \tif(props.genre) {\n  \t\tlet g = props.genre;\n  \t\tlet topGenre = g.charAt(0).toUpperCase() + g.slice(1);\n  \t\twriteText(ctx, topGenre, 250, 460);\n  \t}\n\n  \tif(palette.DarkVibrant) {\n  \t\tconst bgColor = palette.DarkVibrant.getRgb();\n  \t\tctx.fillStyle = 'rgba(' + bgColor[0] + ',' + bgColor[1] + ',' + bgColor[2] + ', 50)';\n  \t} else {\n  \t\tctx.fillStyle = 'rgb(255,255,255,50)';\n  \t}\n  \tctx.font = \"12px 'Circular Spotify'\";\n  \twriteText(ctx, 'bit.ly/quarantine-wrapped', 305, 66);\n  }\n\n  const writeText = (ctx, words, x, y) => {\n  \tctx.fillText(words, x, y);\n  }\n\n  const drawImage = (ctx, src, x, y, width, height) => {\n  \treturn new Promise((resolve, reject) => {\n\t  \tconst image = new Image();\n\t  \timage.crossOrigin = 'Anonymous';\n\t  \timage.src = src;\n\t  \timage.onload = () => {\n\t  \t\tctx.drawImage(image, x, y, width, height);\n\t  \t\tresolve();\n\t  \t}\n\t\t});\n  }\n\n  const dlCanvas = () => {\n  \tlet canvas = document.getElementById(\"story\");\n  \tlet dt = canvas.toDataURL('image/png');\n  \t/* Change MIME type to trick the browser to downlaod the file instead of displaying it */\n  \tdt = dt.replace(/^data:image\\/[^;]*/, 'data:application/octet-stream');\n\n  \t/* In addition to <a>'s \"download\" attribute, you can define HTTP-style headers */\n  \tdt = dt.replace(/^data:application\\/octet-stream/, 'data:application/octet-stream;headers=Content-Disposition%3A%20attachment%3B%20filename=Canvas.png');\n  \tvar link = document.createElement('a');\n  \tlink.download = 'quarantine-wrapped.png';\n  \tlink.href = dt;\n  \tlink.click();\n  }\n\n  useEffect(() => {\n  \tconsole.log(props.done);\n    if(props.data && props.done) {\n    \tgetColor();\n    }\n  }, [props.data]);\n\n  return (\n    <div className='canvas-graphic-wrapper'>\n    \t<div className='graphics-wrapper'>\n      {/*<canvas id='downloadable' width='500' height='500'></canvas>*/}\n\t      <canvas id='songs' width='450' height='800'></canvas>\n\t      <canvas id='story' width='450' height='800'></canvas>\n\t      <canvas id='artists' width='450' height='800'></canvas>\n      </div>\n    </div>\n  )\n}\n\nexport default CanvasGraphic;\n","import React, {useEffect, useState} from 'react';\n\nfunction Search(props) {\n\n\tconst [query, setQuery] = useState('');\n\tconst [results, setResults] = useState([]);\n\tconst [searched, setSearched] = useState(false);\n\n\tconst handleChange = (evt) => {\n\t\tsetQuery(evt.target.value);\n\t\tsetSearched(false);\n\t}\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tfetchData();\n\t}\n\n\tconst fetchData = () => {\n\t\tif(props.tracks) {\n\t\t\tprops.spotifyApi.searchTracks(query).then((res) => {\n\t\t\t  setResults(res.tracks.items);\n\t\t\t  setSearched(true);\n\t\t\t});\n\t\t} else {\n\t\t\tprops.spotifyApi.searchArtists(query).then((res) => {\n\t\t\t  setResults(res.artists.items);\n\t\t\t  setSearched(true);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"search\">\n\t\t\t<form className=\"search-form\">\n\t          <input type=\"text\" value={query} placeholder={\"Search \" + (props.tracks ? \"a track\" : \"an artist\")} onChange={handleChange} />\n\t          <button onClick={handleSubmit}>\n\t          \t<img src=\"./search.png\" />\n\t          </button>\n\t        </form>\n\t        {\n\t        \tresults.length > 0 ?\n\t\t\t        <div className=\"results\">\n\t\t\t        \t{results.map(track => props.tracks ? <SearchTrackResult data={track} setEntityData={props.setData} /> : <SearchArtistResult data={track} setEntityData={props.setData} />)}\n\t\t\t      \t</div>\n\t\t      \t:\n\t\t      \t\t(\n\t\t      \t\t\tsearched ?\n\t\t\t      \t\t\t<div className=\"results\">\n\t\t\t      \t\t\t\t<p>There were no results for your query.</p>\n\t\t\t      \t\t\t</div>\n\t\t      \t\t\t:\n\t\t      \t\t\t\t<></>\n\t\t      \t\t)\n\t\t    }\n      \t</div>\n\t);\n}\n\nfunction SearchTrackResult(props) {\n\n\tconst handleClick = (evt) => {\n\t\tprops.setEntityData(props.data);\n\t}\n\n\treturn (\n\t\t<div className=\"results-item\" onClick={handleClick}>\n\t\t\t<img src={props.data.album.images?.[0]?.url ? props.data.album.images[0].url : 'song.png'} />\n\t\t\t<div>\n\t\t\t\t<h3>{props.data.name}</h3>\n\t\t\t\t<h4>{props.data.artists.map(artist => artist.name).reduce((acc, cur) => acc + ', ' + cur)}</h4>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction SearchArtistResult(props) {\n\n\tconst handleClick = (evt) => {\n\t\tprops.setEntityData(props.data);\n\t}\n\n\treturn (\n\t\t<div className=\"results-item\" onClick={handleClick}>\n\t\t\t<img src={props.data.images?.[0]?.url ? props.data.images[0].url : 'user.jpeg'} />\n\t\t\t<div>\n\t\t\t\t<h3>{props.data.name}</h3>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Search;","import React, {useEffect, useState} from 'react';\nimport Search from './Search';\n\nfunction Entity(props) {\n\n\tconst [data, setData] = useState({});\n\tconst [selected, setSelected] = useState(false);\n\n\tuseEffect(() => {\n\t\tif(data.name) {\n\t\t\tsetSelected(true);\n\t\t\tif(props.tracks) {\n\t\t\t\tprops.dispatch({type: 'ADD_TRACK', index: props.index-1, data: data});\n\t\t\t} else {\n\t\t\t\tprops.dispatch({type: 'ADD_ARTIST', index: props.index-1, data: data});\n\t\t\t}\n\t\t}\n\t}, [data]);\n\n\tconst handleClick = (evt) => {\n\t\tevt.preventDefault();\n\t\tsetSelected(false);\n\t\tsetData({});\n\t}\n\n\treturn (\n\t\t<div className=\"entity-wrapper\">\n\t\t \t<p className=\"entity-number\">{props.index+'.'}</p>\n\t\t\t{\n\t\t\t\t(selected && data) ?\n\t\t\t\t<div className=\"selected-entity\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<span>{data.name + (props.tracks ? \" - \" + data.artists.map(artist => artist.name).reduce((acc, cur) => acc + ', ' + cur) : '')}</span>\n\t\t\t\t\t\t<a className=\"change-link\" onClick={handleClick}>Change</a>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<Search spotifyApi={props.spotifyApi} dispatch={props.dispatch} setData={setData} tracks={props.tracks} />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default Entity;","import React, {useEffect, useState, useReducer} from 'react';\nimport axios from 'axios';\nimport './App.scss';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport CanvasGraphic from './CanvasGraphic';\nimport Entity from './Entity';\nimport Div100vh from 'react-div-100vh';\n\nconst initialState = {\n  tracks: new Array(5),\n  artists: new Array(5),\n  genre: '',\n  time: 0\n};\n\nconst testState = {\n  artists: [\n  {\n    name: \"Flume\",\n    images: [{url:\"https://i.scdn.co/image/ab6761610000e5ebdcbf7ddf047dd267e4de8978\"},{url:\"https://i.scdn.co/image/ab6761610000e5ebdcbf7ddf047dd267e4de8978\"}]\n  },\n  {\n    name: \"Fred Again..\",\n    images: [{url:\"https://i.scdn.co/image/ab6761610000e5ebc3631d90ebc9440d6fd63755\"},{url:\"https://i.scdn.co/image/ab6761610000e5ebc3631d90ebc9440d6fd63755\"}]\n  },\n  {\n    name: \"Joji\",\n    images: [{url:\"https://i.scdn.co/image/ab6761610000e5eb4111c95b5f430c3265c7304b\"},{url:\"https://i.scdn.co/image/ab6761610000e5eb4111c95b5f430c3265c7304b\"}]\n  },\n  {\n    name: \"Shane Malone\",\n    images: [{url:\"https://i.scdn.co/image/ab6761610000e5eb65873878eae5442bbd654a76\"},{url:\"https://i.scdn.co/image/ab6761610000e5eb65873878eae5442bbd654a76\"}]\n  },\n  {\n    name: \"hemlocke springs\",\n    images: [{url:\"https://i.scdn.co/image/ab6761610000e5eb5f863ecc015a1f9cb089dda1\"},{url:\"https://i.scdn.co/image/ab6761610000e5eb5f863ecc015a1f9cb089dda1\"}]\n  }\n  ],\n  tracks: [\n  {\n    name:\"Slugger 1.4 [2014 Export.WAV]\",\n    artists: [{name:\"Flume\"}],\n    album: {images:[{url:\"https://i.scdn.co/image/ab67616d0000b273af8f828232b13d28d95619ad\"},{url:\"https://i.scdn.co/image/ab67616d0000b273af8f828232b13d28d95619ad\"}]}\n  },\n  {\n    name:\"Marea (we’ve lost dancing)\",\n    artists: [{name:\"Fred Again..\"},{name:\"The Blessed Madonna\"}],\n    album: {images:[{url:\"https://i.scdn.co/image/ab67616d0000b2730f0e63e38a0ea92314ab9d7f\"},{url:\"https://i.scdn.co/image/ab67616d0000b2730f0e63e38a0ea92314ab9d7f\"}]}\n  },\n  {\n    name:\"Die For You\",\n    artists: [{name:\"Joji\"}],\n    album: {images:[{url:\"https://i.scdn.co/image/ab67616d0000b273eaac2a7955f5b8967991cacb\"},{url:\"https://i.scdn.co/image/ab67616d0000b273eaac2a7955f5b8967991cacb\"}]}\n  },\n  {\n    name:\"Waiting\",\n    artists: [{name:\"Shane Malone\"},{name:\"Sprig\"}],\n    album: {images:[{url:\"https://i.scdn.co/image/ab67616d0000b273d79774a2a3756588f4bfc590\"},{url:\"https://i.scdn.co/image/ab67616d0000b273d79774a2a3756588f4bfc590\"}]}\n  },\n  {\n    name:\"girlfriend\",\n    artists: [{name:\"hemlocke springs\"}],\n    album: {images:[{url:\"https://i.scdn.co/image/ab67616d0000b273a9d3614d51dbd54980502f15\"},{url:\"https://i.scdn.co/image/ab67616d0000b273a9d3614d51dbd54980502f15\"}]}\n  },\n  ],\n  genre: \"Vapor Twitch\",\n  time: \"87,566\"\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TRACK':\n      const newTracks = state.tracks;\n      newTracks[action.index] = action.data;\n      return {...state, tracks: newTracks};\n    case 'ADD_ARTIST':\n      const newArtists = state.artists;\n      newArtists[action.index] = action.data;\n      return {...state, artists: newArtists};\n    case 'UPDATE_GENRE':\n      return {...state, genre: action.data};\n    case 'UPDATE_TIME':\n      return {...state, time: action.data};\n    case 'UPDATE_DATA':\n      return action.data;\n    default:\n      throw new Error();\n  }\n}\n\n\nfunction App() {\n  const [done, setDone] = useState(false);\n  const [data, dispatch] = useReducer(reducer, initialState);\n\n  const spotifyApi = new SpotifyWebApi();\n\n  const getHashParams = () => {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  useEffect(() => {\n    const params = getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    // dispatch({type:'UPDATE_DATA', data:testState});\n    // setDone(true);\n  }, [setDone]);\n\n  const validate = (evt) => {\n    let allFilled = true;\n    for(let i = 0; i < 5; i++) {\n      allFilled = !!(data.tracks[i] && data.artists[i]);\n    }\n    //allFilled = allFilled && data.genre && data.time;\n    setDone(allFilled);\n    if(!allFilled) {\n      alert('Please make sure all fields are filled in.');\n    }\n  }\n\n  const renderSelections = (tracks) => {\n    let content = [];\n    for(let i = 0; i < 5; i++) {\n      content.push(<Entity key={i} tracks={tracks} index={i+1} spotifyApi={spotifyApi} dispatch={dispatch} />);\n    }\n    return content;\n  }\n\n  return (\n    <div className='App'>\n     <h1>DIY WRAPPED</h1>\n      <div className=\"selections-wrapper\">\n        <div className=\"selections\">\n          <h2>Top Tracks</h2>\n          {renderSelections(true)}\n        </div>\n        <div className=\"selections\">\n          <h2>Top Artists</h2>\n          {renderSelections(false)}\n        </div>\n      </div>\n      <button onClick={validate}>Create My Wrapped</button>\n      <CanvasGraphic data={data} done={done}/>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/gradient1.d7a28196.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gradient3.a5e57412.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gradient4.5f015694.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gradient5.e2e75598.png\";"],"sourceRoot":""}